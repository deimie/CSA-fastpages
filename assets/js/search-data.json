{
  
    
        "post0": {
            "title": "Innovation - Week 1",
            "content": "Innovation - Week 1 .",
            "url": "https://deimie.github.io/fastpages/markdown/2022/08/29/Innovation-Week-1.html",
            "relUrl": "/markdown/2022/08/29/Innovation-Week-1.html",
            "date": " • Aug 29, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Code Documentation",
            "content": "Lesson 1 . Lesson 1 is simply an introduction to the course. It talks about how CSA students are taught to think similarly to software engineers, and how we will continue to grow form this. . Lesson 2 . In lesson 2, we learn about the basic structure of a java header, as well as some basic syntax. Below is a basic java header. . public class className { public static void main(String[] args) { } } . The main method is the most common method used as an entry point to any java program. | The public method is simply a method that makes the scope of the code global. It’s kind of in the name. | static means that there will only be one type of this method and that it will be shared. Basically, we can call the main method multiple times without creating a new object. | void means there will be nothing returned from the main method. | String[] args - The main method’s argument is an array of string type. THis allows the method to accept command line arguments, which are stored as strings in this variable. args can be changed. | . Lesson 3 . To instatiate a new object you use the syntax: className objectName = new className(); . Lesson 4 . Lesson 4 was just lots of tedious programming challenges using the things we already learned from the first 3 lessons. There were 4 different challenges where we controlled a painter. These challenges made it almost muscle memory to call objects in java. . Lesson 5 . Lesson 5 was similar to lesson 4, by having many challnges to complete, except now the if statement was introduced. .",
            "url": "https://deimie.github.io/fastpages/markdown/2022/08/27/code-documentation.html",
            "relUrl": "/markdown/2022/08/27/code-documentation.html",
            "date": " • Aug 27, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Primitives",
            "content": "public class DefinePrimitives { public static void main(String[] args) { int anInt = 100; double aDouble = 89.9; boolean aBoolean = true; // not primitives but essential String aString = &quot;Hello, World!&quot;; // wrapper class shortcut assignment String aStringFormal = new String(&quot;Greetings, World!&quot;); System.out.println(&quot;anInt: &quot; + anInt); System.out.println(&quot;aDouble: &quot; + aDouble); System.out.println(&quot;aBoolean: &quot; + aBoolean); System.out.println(&quot;aString: &quot; + aString); System.out.println(&quot;aStringFormal: &quot; + aStringFormal); } } DefinePrimitives.main(null) . // java style to import library import java.util.Scanner; // class must alway have 1st letter as uppercase, CamelCase is Java Class convention public class ScanPrimitives { public static void main(String[] args) { Scanner input; // primitive int input = new Scanner(System.in); System.out.print(&quot;Enter an integer: &quot;); try { int sampleInputInt = input.nextInt(); System.out.println(sampleInputInt); } catch (Exception e) { // if not an integer System.out.println(&quot;Not an integer (form like 159), &quot; + e); } input.close(); // primitive double input = new Scanner(System.in); System.out.print(&quot;Enter a double: &quot;); try { double sampleInputDouble = input.nextDouble(); System.out.println(sampleInputDouble); } catch (Exception e) { // if not a number System.out.println(&quot;Not an double (form like 9.99), &quot; + e); } input.close(); // primitive boolean input = new Scanner(System.in); System.out.print(&quot;Enter a boolean: &quot;); try { boolean sampleInputBoolean = input.nextBoolean(); System.out.println(sampleInputBoolean); } catch (Exception e) { // if not true or false System.out.println(&quot;Not an boolean (true or false), &quot; + e); } input.close(); // wrapper class String input = new Scanner(System.in); System.out.print(&quot;Enter a String: &quot;); try { String sampleInputString = input.nextLine(); System.out.println(sampleInputString); } catch (Exception e) { // this may never happen System.out.println(&quot;Not an String, &quot; + e); } input.close(); } } ScanPrimitives.main(null); . public class PrimitiveDivision { public static void main(String[] args) { int i1 = 7, i2 = 2; System.out.println(&quot;Integer Division&quot;); System.out.println(&quot; tint output with concatenation: &quot; + i1 + &quot;/&quot; + i2 + &quot; = &quot; + i1/i2); System.out.println(String.format(&quot; tint output with format: %d/%d = %d&quot;,i1, i2, i1/i2)); System.out.printf(&quot; tint output with printf: %d/%d = %d n&quot;,i1, i2, i1/i2); double d1 = 7, d2 = 2; System.out.println(&quot;Double Division&quot;); System.out.println(&quot; tdouble output with concatenation: &quot; + d1 + &quot;/&quot; + d2 + &quot; = &quot; + d1/d2); System.out.println(String.format(&quot; tdouble output with format: %.2f/%.2f = %.2f&quot;,d1, d2, d1/d2)); System.out.printf(&quot; tdouble output with printf: %.2f/%.2f = %.2f n&quot;,d1, d2, d1/d2); System.out.println(&quot;Casting and Remainders&quot;); System.out.printf(&quot; tint cast to double on division: %d/%d = %.2f n&quot;,i1, i2, i1/(double)i2); System.out.println(&quot; tint using modulo for remainder: &quot; + i1 + &quot;/&quot; + i2 + &quot; = &quot; + i1/i2 + &quot; remainder &quot; + i1%i2); } } PrimitiveDivision.main(null); . public class GradeCalculator { // introduction to Double wrapper class (object) ArrayList&lt;Double&gt; grades; // similar to Python list // constructor, initializes ArrayList and call enterGrades method public GradeCalculator() { this.grades = new ArrayList&lt;&gt;(); this.enterGrades(); } // double requires test for zero versus threshold, DO NOT compare to Zero private boolean isZero(double value){ double threshold = 0.001; return value &gt;= -threshold &amp;&amp; value &lt;= threshold; } // enterGrades input method using scanner private void enterGrades() { Scanner input; while (true) { input = new Scanner(System.in); System.out.print(&quot;Enter a double, 0 to exit: &quot;); try { double sampleInputDouble = input.nextDouble(); System.out.println(sampleInputDouble); if (isZero(sampleInputDouble)) break; // exit loop on isZero else this.grades.add(sampleInputDouble); // adding to object, ArrayList grades } catch (Exception e) { // if not a number System.out.println(&quot;Not an double (form like 9.99), &quot; + e); } input.close(); } } // average calculation public double average() { double total = 0; // running total for (double num : this.grades) { // enhanced for loop total += num; // shortcut add and assign operator } return (total / this.grades.size()); // double math, ArrayList grades object maintains its size } // static main method, used as driver and tester public static void main(String[] args) { GradeCalculator grades = new GradeCalculator(); // calls constructor, creates object, which calls enterGrades System.out.println(&quot;Average: &quot; + String.format(&quot;%.2f&quot;, grades.average())); // format used to standardize to two decimal points } } // IJava activation GradeCalculator.main(null); .",
            "url": "https://deimie.github.io/fastpages/2022/08/26/primitives.html",
            "relUrl": "/2022/08/26/primitives.html",
            "date": " • Aug 26, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Bash",
            "content": "cd vscode ls .",
            "url": "https://deimie.github.io/fastpages/2022/08/25/bash.html",
            "relUrl": "/2022/08/25/bash.html",
            "date": " • Aug 25, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "Python Notebook",
            "content": "n = int(input(&#39;Type the nth term in the fibonacci sequence: &#39;)) def fibonacci(n): a=0 b=1 fibList = [0] # there are no negative nth terms allowed if n &lt;=0: print(&#39;Input must be greater than 0.&#39;) fibonacci() # restart the program # instead of using logic for the whole sequence, it&#39;s easier to make the 1st term always return 0. elif n == 1: print(fibList) return else: fibList.append(1) # for loop will go through each number of the sequence and append them into the list. for i in range(2,n): c = a + b a = b b = c fibList.append(c) print(fibList) # print final result fibonacci(n) . [0, 1, 1, 2, 3] .",
            "url": "https://deimie.github.io/fastpages/2022/08/22/pythonNotebook.html",
            "relUrl": "/2022/08/22/pythonNotebook.html",
            "date": " • Aug 22, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "Java Notebook",
            "content": "// Define Static Method within a Class public class HelloStatic { // Java standard runtime entry point public static void main(String[] args) { System.out.println(&quot;Hello World!&quot;); } } // A method call allows us to execute code that is wrapped in Class HelloStatic.main(null); // Class prefix allows reference of Static Method . Hello World! .",
            "url": "https://deimie.github.io/fastpages/2022/08/22/javaNotebook.html",
            "relUrl": "/2022/08/22/javaNotebook.html",
            "date": " • Aug 22, 2022"
        }
        
    
  
    
        ,"post6": {
            "title": "Tool Setup - Week 0",
            "content": "Tool Setup - Week 0 .",
            "url": "https://deimie.github.io/fastpages/markdown/2022/08/22/Tool-Setup-Week-0.html",
            "relUrl": "/markdown/2022/08/22/Tool-Setup-Week-0.html",
            "date": " • Aug 22, 2022"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "Evan Sanchez . I am a CSA student at Del Norte High School! .",
          "url": "https://deimie.github.io/fastpages/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  
      ,"page2": {
          "title": "",
          "content": "Welcome to my page! . Posts .",
          "url": "https://deimie.github.io/fastpages/",
          "relUrl": "/",
          "date": ""
      }
      
  

  
      ,"page3": {
          "title": "Notes",
          "content": "Syntax for Front Matter . .",
          "url": "https://deimie.github.io/fastpages/notes/",
          "relUrl": "/notes/",
          "date": ""
      }
      
  

  
  

  

  
  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://deimie.github.io/fastpages/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}